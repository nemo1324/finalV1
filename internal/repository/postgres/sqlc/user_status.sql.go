// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user_status.sql

package sqlc

import (
	"context"
)

const deleteUser = `-- name: DeleteUser :exec
DELETE FROM users
WHERE id = $1
`

func (q *Queries) DeleteUser(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteUser, id)
	return err
}

const logout = `-- name: Logout :exec
UPDATE users
SET status = 'offline'
WHERE id = $1
`

func (q *Queries) Logout(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, logout, id)
	return err
}

const updateUserName = `-- name: UpdateUserName :exec
UPDATE users
SET name = $1
WHERE id = $2
`

type UpdateUserNameParams struct {
	Name string `json:"name"`
	ID   int32  `json:"id"`
}

func (q *Queries) UpdateUserName(ctx context.Context, arg *UpdateUserNameParams) error {
	_, err := q.db.Exec(ctx, updateUserName, arg.Name, arg.ID)
	return err
}

const updateUserStatus = `-- name: UpdateUserStatus :exec
UPDATE users
SET status = $1
WHERE id = $2
`

type UpdateUserStatusParams struct {
	Status string `json:"status"`
	ID     int32  `json:"id"`
}

func (q *Queries) UpdateUserStatus(ctx context.Context, arg *UpdateUserStatusParams) error {
	_, err := q.db.Exec(ctx, updateUserStatus, arg.Status, arg.ID)
	return err
}
